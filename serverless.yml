service: comtac

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-plugin-scripts

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${self:custom.profiles.${self:provider.stage}}
  region: ${opt:region, self:custom.defaultRegion}
  environment:
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["ComtacDynamoDbTable", "Arn"] }
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
      Resource:
        - { "Fn::Join": [ "/", [
            { "Fn::GetAtt": ["ComtacDynamoDbTable", "Arn"] }, "index", "gsi_1"
          ]]}

custom:
  defaultStage: dev
  defaultRegion: us-west-2
  profiles:
    dev: dev
    prod: prod
  tableName: ${self:service}-${self:provider.stage}
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      comtac:
        sources:
          - table: ${self:service}-${self:provider.stage}
            sources: [./dynamodb/evolutionsCL.json, ./dynamodb/evolutionsCM.json, ./dynamodb/evolutionsIL.json, ./dynamodb/evolutionsIM.json, ./dynamodb/evolutionsMFL.json, ./dynamodb/evolutionsMFM.json, ./dynamodb/evolutionsSFL.json, ./dynamodb/evolutionsSFM.json]
  serverless-offline:
    port: 3001
  
functions: 
  create:
    handler: evolution/create.create
    events:
      - http:
          path: evolutions
          method: post
          cors: true
  list:
    handler: evolution/list.list
    events:
      - http:
          path: evolutions
          method: get
          cors: true
  read:
    handler: evolution/read.read
    events:
      - http:
          path: evolutions/{id}
          method: get
          cors: true
  update:
    handler: evolution/update.update
    events:
      - http:
          path: evolutions/{id}
          method: put
          cors: true
  delete:
    handler: evolution/delete.delete
    events:
      - http:
          path: evolutions/{id}
          method: delete
          cors: true

resources:
  Resources:
    ComtacDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: data
          AttributeType: S
        KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
        GlobalSecondaryIndexes:
        - IndexName: gsi_1
          KeySchema:
          - AttributeName: sk
            KeyType: HASH
          - AttributeName: data
            KeyType: RANGE
          Projection:
            ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
